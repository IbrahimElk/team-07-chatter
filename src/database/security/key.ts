//Author: Barteld Van Nieuwenhove
//Date: 2023/03/09
import { subtle, webcrypto } from 'crypto';
import fs from 'fs';

const secureLocation = './assets/secure_location/secure_key.txt';

/**
 * Import Key from a secure location.
 */
export const importedKey = await loadKey(secureLocation);

/**
 * Encryption and decryption key generated by the AES-GCM algorithm.
 * Saved to a secure location.
 */
export async function generateKey(): Promise<webcrypto.CryptoKey> {
  const key = await subtle.generateKey(
    {
      name: 'AES-GCM',
      length: 256,
    },
    true,
    ['encrypt', 'decrypt']
  );
  return key;
}

/**
 * Saves the key to a location.
 * @param key The cryptokey to be saved to a location.
 * @param path The location to save the key to.
 */
export async function saveKey(key: webcrypto.CryptoKey, path: string): Promise<void> {
  const exportedKey = await subtle.exportKey('raw', key);
  fs.writeFileSync(path, new DataView(exportedKey));
}

/**
 * Loads an AES-GCM encrypt, decrypt key from a location.
 * @param path The location to load the key from.
 * @returns A promise that resolves to the loaded key.
 */
export async function loadKey(path: string): Promise<webcrypto.CryptoKey> {
  return await subtle.importKey('raw', fs.readFileSync(path), 'AES-GCM', true, ['encrypt', 'decrypt']);
}
